    1  exit
    2  lab-configure 
    3  git clone https://github.com/sanjurajrh/DO180-apps.git
    4  git clone https://github.com/sanjurajrh/DO288-apps.git
    5  cd DO180-apps/
    6  git checkout -b exercise
    7  echo "tst" > test.txt
    8  git add test.txt
    9  git commit -m "new file"
   10  git push --set-upstream origin exercise 
   11  git pull 
   12  git branch 
   13  git checkout -b ex1
   14  echo "tst" > test.txt
   15  git add test.txt
   16  git commit -m "new file"
   17  git push --set-upstream origin ex1
   18  cd
   19  ls 
   20  cat /usr/local/etc/ocp4.config 
   21  lab external-registry start 
   22  cat /run/user/1000/containers/auth.json
   23  podman login quay.io
   24  id
   25  podman login quay.io
   26  cat /run/user/1000/containers/auth.json
   27  podman logout quay.io
   28  cat /run/user/1000/containers/auth.json
   29  echo $XDG_RUNTIME
   30  skopeo copy -h 
   31  echo $XDG_RUNTIME_DIR
   32  oc whoami  
   33  oc get projects
   34  oc project vkndeo-project1-oci
   35  oc get secrets 
   36  oc describe sa default 
   37  oc new-app --name==ubisleepapp --docker-image=quay.io/sanjuraj_rh/ubi-sleep:1.0
   38  oc get route -n openshift-image-registry 
   39  oc get route/default-route -n openshift-image-registry -o yaml 
   40  # defaultRoute: true 
   41  oc get all -n openshift-image-registry 
   42  oc get config -n openshift-image-registry
   43  oc get is
   44  oc get istag
   45  lab multicontainer-helm start 
   46  help m 
   47  helm
   48  curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 
   49  chmod 700 get_helm.sh
   50  ./get_helm.sh 
   51  helm3
   52  helm
   53  helm version 
   54  history 
   55  $(date +%Y-%m-%d)
   56  date +%Y-%m-%d
   57  DATE=$(date +%Y-%m-%d)
   58  echo $DATE
   59  cat ~/s2i_steps_for_verification 
   60  exit 
   61  history 
   62  oc login -u vkndeo -p e5e8e891ea464403b15e https://api.ap46a.prod.ole.redhat.com:6443
   63  oc new-project vkndeo-rs
   64  oc delete project vkndeo-rs
   65  oc login -u vkndeo -p e5e8e891ea464403b15e https://api.ap46a.prod.ole.redhat.com:6443
   66  oc new-project vkndeo-project-kustomize
   67  oc get all
   68  ls
   69  kubectl create deployment myweb --image=quay.io/redhattraining/versioned-hello:v1.0 --dry-run=client -o yaml > deployment.yaml
   70  ls -l deployment.yaml 
   71  vim deployment.yaml 
   72  kubectl create -f deployment.yaml
   73  kubectl get pods 
   74  kubectl get all
   75  kubectl exec -it myweb-884856fbf-gnbd6 -- curl localhost:8080
   76  kubectl delete -f deployment.yaml 
   77  kubectl get all
   78  ls
   79  mkdir -p /home/student/base 
   80  mkdir -p /home/student/overlays/{dev,prod}
   81  tree base/
   82  tree overlays/
   83  mkdir demo 
   84  cp deployment.yaml demo/
   85  cd demo/
   86  ls
   87  vim kustomization.yaml
   88  cat kustomization.yaml
   89  kubectl get all
   90  ls
   91  kubectl apply -k .
   92  kubectl get all
   93  kubectl exec -it myweb-884856fbf-9g8tr -- curl localhost:8080 
   94  kubectl delete -k . 
   95  kubectl get all
   96  cd
   97  tree base/
   98  tree overlays/
   99  cp deployment.yaml base/
  100  cp demo/kustomization.yaml base/
  101  cd base/
  102  ls 
  103  vim kustomization.yaml 
  104  cat kustomization.yaml
  105  vim ../overlays/dev/kustomization.yaml
  106  cat ../overlays/dev/kustomization.yaml
  107  cp ../overlays/dev/kustomization.yaml ../overlays/prod/
  108  vim ../overlays/prod/kustomization.yaml 
  109  cat ../overlays/prod/kustomization.yaml
  110  kubectl apply -k .
  111  kubectl get all --show-labels
  112  kubectl apply -k ../overlays/dev/
  113  kubectl get all --show-labels
  114  kubectl apply -k ../overlays/prod/
  115  kubectl get all --show-labels
  116  kubectl delete -k . 
  117  kubectl delete -k ../overlays/dev/
  118  kubectl delete -k ../overlays/prod/
  119  kubectl get all
  120  cat ../overlays/dev/kustomization.yaml 
  121  vim ../overlays/dev/kustomization.yaml
  122  cat ../overlays/dev/kustomization.yaml
  123  vim ../overlays/prod/kustomization.yaml 
  124  cat ../overlays/prod/kustomization.yaml
  125  kubectl apply -k ../overlays/dev/
  126  kubectl get all --show-labels
  127  kubectl apply -k ../overlays/prod/
  128  kubectl get all --show-labels
  129  kubectl eec -it dev-myweb-6cc9f45cc7-6r2xx -- curl localhost:8080 
  130  kubectl exec -it dev-myweb-6cc9f45cc7-6r2xx -- curl localhost:8080 
  131  kubectl exec -it prod-myweb-677cbd9bbf-nptm9 -- curl localhost:8080 
  132  kubectl delete -k ../overlays/dev/
  133  vim ../overlays/dev/kustomization.yaml 
  134  cat ../overlays/dev/kustomization.yaml
  135  vim ../overlays/dev/kustomization.yaml 
  136  cat ../overlays/dev/kustomization.yaml
  137  kubectl apply -k ../overlays/dev/
  138  kubectl get all --show-labels 
  139  kubectl exec -it prod-myweb-677cbd9bbf-nptm9 -- curl localhost:8080 
  140  kubectl exec -it dev-myweb-7958b4bc7d-58wvr -- curl localhost:8080
  141  kubectl delete -k ../overlays/prod/
  142  kubectl delete -k ../overlays/dev/
  143  kubectl get all
  144  cp deployment.yaml ../overlays/dev/replica-count.yaml
  145  vim ../overlays/dev/replica-count.yaml
  146  cat ../overlays/dev/replica-count.yaml
  147  cp ../overlays/dev/replica-count.yaml ../overlays/prod/
  148  vim ../overlays/prod/replica-count.yaml 
  149  cat ../overlays/prod/replica-count.yaml
  150  cat ../overlays/dev/kustomization.yaml 
  151  vim ../overlays/dev/kustomization.yaml
  152  cat ../overlays/dev/kustomization.yaml
  153  vim ../overlays/prod/kustomization.yaml 
  154  cat ../overlays/prod/kustomization.yaml
  155  kubectl apply -k ../overlays/dev/
  156  kubectl get all --show-labels 
  157  kubectl apply -k ../overlays/prod/
  158  kubectl get all --show-labels 
  159  kubectl delete -k ../overlays/dev/
  160  kubectl delete -k ../overlays/prod/
  161  cat ../overlays/dev/kustomization.yaml 
  162  cat ../overlays/dev/replica-count.yaml 
  163  cd
  164  ls
  165  podman search quay.io/sanjuraj_rh/busybox
  166  podman search quay.io/busybox
  167  kubectl run mypod --image=quay.io/quay/busybox --dry-run=client -o yaml > pod.yaml
  168  oc projects 
  169  oc new-project vkndeo-project-php-s2i 
  170  oc new-app --name phpmyapp https://github.com/sanjurajrh/php-helloworld
  171  oc logs -f buildconfig/phpmyapp
  172  oc get pods 
  173  oc get svc 
  174  oc get route 
  175  oc expose svc/phpmyapp
  176  oc get route 
  177  curl phpmyapp-vkndeo-project-php-s2i.apps.ap46a.prod.ole.redhat.com
  178  oc get all
  179  oc projects 
  180  oc edit bc//phpmyapp 
  181  oc edit bc/phpmyapp 
  182  oc get bc/phpmyapp -o yaml > bc.yaml 
  183  vim bc.yaml
  184  oc get build
  185  oc start-build bc/phpmyapp
  186  oc get build
  187  oc logs -f bc/phpmyapp
  188  oc cancel-build bc/phpmyapp
  189  oc get build 
  190  oc get pods 
  191  oc start-build -F bc/phpmyapp
  192  oc get pods 
  193  o cget pods 
  194  oc get pods 
  195  curl phpmyapp-vkndeo-project-php-s2i.apps.ap46a.prod.ole.redhat.com
  196  oc start-build --help 
  197  oc start-build -F bc/phpmyapp 
  198  oc get pods 
  199  curl phpmyapp-vkndeo-project-php-s2i.apps.ap46a.prod.ole.redhat.com
  200  oc get is 
  201  oc describe is 
  202  oc describe bc 
  203  oc edit bc/phpmyapp
  204  # 8-Lw1_OtJOaww9f5mqxO
  205  oc get build 
  206  curl -X POST https://api.ap46a.prod.ole.redhat.com:6443/apis/build.openshift.io/v1/namespaces/vkndeo-project-php-s2i/buildconfigs/phpmyapp/webhooks/8-Lw1_OtJOaww9f5mqxO/generic 
  207  oc get build 
  208  oc get pods 
  209  history | grep curl 
  210  oc explain bc.spec.runPolicy 
  211  oc new-app -h 
  212  oc projects 
  213  oc new-project vkndeo-project-docker-strategy 
  214  oc new-app https://github.com/sanjurajrh/ch2dockerfile 
  215  oc logs -f buildconfig/ch2dockerfile
  216  oc get pods 
  217  oc get bc
  218  oc get build
  219  oc get pods 
  220  oc --help 
  221  oc get all
  222  oc logs buildconfig.build.openshift.io/ch2dockerfile
  223  oc logs build.build.openshift.io/ch2dockerfile-1
  224  oc get build
  225  oc projects
  226  oc project vkndeo-project-php-s2i
  227  oc get build
  228  oc get bc 
  229  grep -i history bc.yaml 
  230  oc adm prune --help 
  231  oc projects
  232  oc new-project vkndeo-project-php-trigger
  233  oc whoami  
  234  oc whoami  -t 
  235  TOKEN=$(oc whoami -t)
  236  ls
  237  oc get route -n openshift-image-registry 
  238  skopeo copy --dest-creds=vkndeo:${TOKEN} oci-archive:php-73-ubi8-original.tar.gz docker://default-route-openshift-image-registry.apps.ap46a.prod.ole.redhat.com/vkndeo-project-php-trigger/php-73-ubi8:latest 
  239  oc get is 
  240  oc describe is 
  241  oc new-app --name phptriiger php-73-ubi8~https://github.com/sanjurajrh/php-helloworld
  242  oc logs -f buildconfig/phptriiger
  243  oc get pods 
  244  oc describe bc | grep -i trigger
  245  oc get build 
  246  skopeo copy --dest-creds=vkndeo:${TOKEN} oci-archive:php-73-ubi8-newer.tar.gz docker://default-route-openshift-image-registry.apps.ap46a.prod.ole.redhat.com/vkndeo-project-php-trigger/php-73-ubi8:latest 
  247  oc get is 
  248  oc describe is 
  249  oc get build 
  250  oc get pods 
  251  oc describe build phptriiger-2
  252  oc set triggers -h 
  253  oc describe bc | grep -i trigger
  254  oc describe bc 
  255  Build Run Policy:Serial
  256  Triggered by:Config, ImageChange
  257  oc edit bc 
  258  oc get bc
  259  oc get bc/phptriiger -o yaml | grep -i post
  260  oc set build-hook -h 
  261  oc get bc/phptriiger -o yaml | grep -i post
  262  oc set build-hook bc/phptriiger --post-commit --command -- bash -c "curl http://www.gooogle.com"
  263  oc get bc/phptriiger -o yaml | grep -i post
  264  oc get bc/phptriiger -o yaml | grep -i post -C2
  265  oc get bc/phptriiger -o yaml | grep -i post -C10
  266  oc start-build bc/phptriiger -F 
  267  oc get pods 
  268  oc edit bc
  269  oc start-build bc/phptriiger -F 
  270  oc edit bc
  271  oc start-build bc/phptriiger -F 
  272  oc edit bc
  273  oc start-build bc/phptriiger -F 
  274  oc get build s
  275  oc get build
  276  vim code_history.txt
  277  history 
  278  history > history_13.txt 
